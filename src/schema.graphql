# The typeDefs constant defines your GraphQL schema (more about this in a bit).
# Here, it defines a simple Query type with one field called info. This field has
# the type String!. The exclamation mark in the type definition means that this
# field can never be null.

type Query {
    info: String!
    # Limit and offset are called differently in the Prisma API:

    # The limit is called first, meaning you’re grabbing the first x elements after a provided 
    # start index. Note that you also have a last argument available which correspondingly returns the last x elements.
    # The start index is called skip, since you’re skipping that many elements in the list 
    # before collecting the items to be returned. If skip is not provided, it’s 0 by default. 
    # The pagination then always starts from the beginning of the list (or the end in case you’re using last).
    feed(filter: String, skip: Int, first: Int, orderBy: LinkOrderByInput): Feed!
    users: [User]!
}

type Mutation {
    post(url: String!, description: String!): Link!
    signup(email: String!, password: String!, name: String!): AuthPayload
    login(email: String!, password: String!): AuthPayload
    vote(linkId: ID!): Vote
}

type Link {
    id: ID!
    description: String!
    url: String!
    postedBy: User
    votes: [Vote!]!
}

type Feed{
    links: [Link!]!
    count: Int!
}

type AuthPayload {
    token: String
    user: User
}

type User {
    id: ID!
    name: String!
    email: String!
    links: [Link!]!
}

type Subscription {
    newLink: Link
    newVote: Vote
}

type Vote {
    id: ID!
    link: Link!
    user: User!
}

enum LinkOrderByInput {
  description_ASC
  description_DESC
  url_ASC
  url_DESC
  createdAt_ASC
  createdAt_DESC
}